KMD
00000000: EA000007    ;                 B       test_readstring
00000004:             ; 
00000004: 45 6E 74 65 ; trs_prompt      DEFB    "Enter a string:",0
00000008: 72 20 61 20 ; 
0000000C: 73 74 72 69 ; 
00000010: 6E 67 3A 00 ; 
00000014: 59 6F 75 20 ; trs_report      DEFB    "You entered:",0
00000018: 65 6E 74 65 ; 
0000001C: 72 65 64 3A ; 
00000020: 00          ; 
00000021:             ; 
00000024:             ;                 ALIGN
00000024:             ; 
00000024:             ; ;; Test for initial implementation
00000024:             ; test_readstring
00000024: E3A0D801    ;                 MOV             R13,#0x10000
00000028:             ; 
00000028: E24F002C    ;                 ADRL    R0, trs_prompt
0000002C: EF000003    ;                 SWI             3
00000030:             ; 
00000030: E28F0044    ;                 ADRL    R0,trs_str
00000034: EB000006    ;                 BL              ReadString
00000038:             ; 
00000038: E24F002C    ;                 ADRL    R0,trs_report
0000003C: EF000003    ;                 SWI             3
00000040:             ; 
00000040: E28F0034    ;                 ADRL    R0,trs_str
00000044: EF000003    ;                 SWI             3
00000048:             ; 
00000048: E3A0000A    ;                 MOV             R0,#10
0000004C: EF000000    ;                 SWI             0
00000050: EF000002    ;                 SWI             2
00000054:             ; 
00000054:             ; 
00000054:             ; 
00000054:             ; ;; ReadString -- read a string from the keyboard until ENTER/RETURN is pressed
00000054:             ; ;; 
00000054:             ; ;; R0 address to place string
00000054:             ; 
00000054:             ; ReadString
00000054:             ; 
00000054:             ;         ; read in with SWI 1 until RETURN (10) is pressed
00000054:             ;         ; as SWI 1 moves into R0, move the address into R1
00000054:             ; 
00000054: E1A01000    ;         MOV R1,R0
00000058:             ; 
00000058:             ; mainReadLoop
00000058: EF000001    ;         SWI 1
0000005C:             ; 
0000005C:             ;         ; check return
0000005C: E350000A    ;         CMP R0, #10
00000060: 0A000002    ;         BEQ end
00000064:             ; 
00000064:             ;         ; else print it out and add to string
00000064: EF000000    ;         SWI 0 ; print
00000068:             ; 
00000068:             ;         ; add to string
00000068: E4C10001    ;         STRB R0, [R1], #1
0000006C:             ; 
0000006C: EAFFFFF9    ;         B mainReadLoop
00000070:             ; 
00000070:             ; end 
00000070:             ;         ; store null byte
00000070: E3A00000    ;         MOV R0,#0
00000074: E4C10001    ;         STRB R0, [R1], #1
00000078: E1A0F00E    ;         MOV PC,R14
0000007C:             ; 
0000007C:             ; 
0000007C:             ; ;; DO NOT REMOVE THIS LABEL AFTER YOUR CODE
0000007C: 00000000    ; trs_str DEFW    0
00000080:             ; 

Symbol Table: Labels
: trs_prompt                        00000004  Local -- ARM
: trs_report                        00000014  Local -- ARM
: test_readstring                   00000024  Local -- ARM
: ReadString                        00000054  Local -- ARM
: mainReadLoop                      00000058  Local -- ARM
: end                               00000070  Local -- ARM
: trs_str                           0000007C  Local -- ARM
